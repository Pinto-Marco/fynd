appoggio fynd



docker compose --env-file ./config/.env.docker up -d --build

docker exec -it fynd_web bash

docker volume rm fynd_postgres_data

docker exec -it fynd_web env | grep DATABASE

docker logs fynd_web

docker compose down --rmi all --volumes --remove-orphans








56.228.2.180


ssh -i ~/Downloads/Cocci\ EC21.pem ec2-user@56.228.2.180

scp -i ~/Downloads/Cocci\ EC21.pem -r ./django/cocci.zip ec2-user@56.228.2.180:~

sudo yum install unzip 


sudo yum update -y
sudo yum install docker -y
sudo systemctl start docker


docker build -t myapp .
docker run -d -p 80:8000 myapp
docker exec -it 492f01a80fd3 bash
docker logs 492f01a80fd3
docker rm $(docker ps -a -q)
docker volume prune
docker stop $(docker ps -aq)
docker rm $(docker ps -aq)
docker volume prune -f
docker build -t myapp .
docker run -p 80:8000 myapp









Docker file Production
# Usa un'immagine ufficiale di Python
FROM python:3.11

# Imposta la directory di lavoro
WORKDIR /app

# Copia i file di requirements
COPY requirements.txt .

# Installa le dipendenze
RUN pip install --no-cache-dir -r requirements.txt

# Copia il resto del codice
COPY . .

# Espone la porta su cui gira Django
EXPOSE 8000

# Comando per avviare Django
# CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]

# Comando di avvio
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "cocci.wsgi"][ec2-user@ip-172-31-30-8 cocci]$

fine Docker file Production






nginx configuration:
sudo yum update -y
sudo dnf update -y
sudo dnf install nginx -y











{
  "filtering": {
    "destination": "732",
    "tags": [
      "<integer>",
      "<integer>"
    ],
    "flags": [
      "SPECIAL_OFFER",
      "<string>"
    ],
    "confirmationType": "<string>",
    "rating": {
      "from": "<integer>",
      "to": "<integer>"
    },
    "durationInMinutes": {
      "from": "<integer>",
      "to": "<integer>"
    },
    "includeAutomaticTranslations": true,
    "attractionId": "<integer>",
    "lowestPrice": "<number>",
    "highestPrice": "<number>",
    "startDate": "<date>",
    "endDate": "<date>"
  },
  "currency": "EUR",
  "sorting": {
    "sort": "TRAVELER_RATING",
    "order": "DESCENDING"
  },
  "pagination": {
    "start": 1,
    "count": 10
  }
}