# Generated by Django 5.1.7 on 2025-06-01 15:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productCode', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('activity_type', models.CharField(blank=True, choices=[('Cibo', 'Cibo'), ('Must see culturali', 'Must see culturali'), ('Eventi', 'Eventi'), ('Escursioni', 'Escursioni'), ('Museo', 'Museo'), ('Tour', 'Tour'), ('Parco', 'Parco'), ('Mercato', 'Mercato'), ('Negozi particolari', 'Negozi particolari'), ('Spa', 'Spa'), ('Spiaggia', 'Spiaggia')], max_length=50, null=True)),
                ('generation_category', models.CharField(blank=True, choices=[('Any', 'Any'), ('Vacanza al Mare', 'Vacanza al Mare'), ('Avventura in Montagna', 'Avventura in Montagna'), ('City Break Culturale', 'City Break Culturale'), ('City Break Locale', 'City Break Locale'), ('Viaggio Notturno e di Divertimento', 'Viaggio Notturno e di Divertimento'), ('Ritiro di Benessere in Natura', 'Ritiro di Benessere in Natura'), ('Viaggio di Lusso', 'Viaggio di Lusso'), ('Vacanza con Macchina', 'Vacanza con Macchina')], max_length=50, null=True)),
                ('interest_culture_heritage', models.BooleanField(default=False)),
                ('interest_nature_outdoors', models.BooleanField(default=False)),
                ('interest_food_gastronomy', models.BooleanField(default=False)),
                ('interest_nightlife_party', models.BooleanField(default=False)),
                ('interest_wellness_spa', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FynderBasicType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('img', models.ImageField(blank=True, null=True, upload_to='fynder-basic-types/')),
                ('description', models.TextField()),
                ('interest_culture_heritage', models.FloatField(default=0.0, help_text='Interest level in Culture & Heritage (0-100)')),
                ('interest_nature_outdoors', models.FloatField(default=0.0, help_text='Interest level in Nature & Outdoors (0-100)')),
                ('interest_food_gastronomy', models.FloatField(default=0.0, help_text='Interest level in Food & Gastronomy (0-100)')),
                ('interest_nightlife_party', models.FloatField(default=0.0, help_text='Interest level in Nightlife & Party (0-100)')),
                ('interest_wellness_spa', models.FloatField(default=0.0, help_text='Interest level in Wellness & Spa (0-100)')),
                ('interest_sport_adventure', models.FloatField(default=0.0, help_text='Interest level in Sport & Adventure (0-100)')),
                ('interest_music_festivals', models.FloatField(default=0.0, help_text='Interest level in Music & Festivals (0-100)')),
                ('interest_shopping_fashion', models.FloatField(default=0.0, help_text='Interest level in Shopping & Fashion (0-100)')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookingSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkin', models.DateField()),
                ('checkout', models.DateField()),
                ('adults', models.IntegerField(default=2)),
                ('rooms', models.IntegerField(default=1)),
                ('city_id', models.IntegerField(null=True)),
                ('country', models.CharField(max_length=2, null=True)),
                ('district', models.IntegerField(null=True)),
                ('region', models.IntegerField(null=True)),
                ('airport', models.CharField(max_length=3, null=True)),
                ('children', models.JSONField(help_text='Array of children ages [5, 8]', null=True)),
                ('guest_allocation', models.JSONField(help_text='Exact allocation of guests to rooms', null=True)),
                ('accommodation_types', models.JSONField(help_text='Array of accommodation type IDs', null=True)),
                ('accommodation_facilities', models.JSONField(help_text='Array of facility IDs', null=True)),
                ('room_facilities', models.JSONField(help_text='Array of room facility IDs', null=True)),
                ('brands', models.JSONField(help_text='Array of hotel chain IDs', null=True)),
                ('currency', models.CharField(max_length=3, null=True)),
                ('min_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('max_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('payment_type', models.CharField(choices=[('pay_at_property', 'Pay at Property'), ('pay_online', 'Pay Online')], max_length=20, null=True)),
                ('credit_card_required', models.BooleanField(default=False)),
                ('meal_plan', models.CharField(choices=[('all_inclusive', 'All Inclusive'), ('breakfast_included', 'Breakfast Included'), ('full_board', 'Full Board'), ('half_board', 'Half Board')], max_length=20, null=True)),
                ('cancellation_type', models.CharField(choices=[('free_cancellation', 'Free Cancellation'), ('non_refundable', 'Non Refundable')], max_length=20, null=True)),
                ('min_review_score', models.IntegerField(null=True)),
                ('stars', models.JSONField(help_text='Array of star ratings [4, 5]', null=True)),
                ('twenty_four_hour_reception', models.BooleanField(default=False)),
                ('travel_proud', models.BooleanField(default=False, help_text='LGBTQ+ friendly properties')),
                ('sort_by', models.CharField(choices=[('distance', 'Distance'), ('price', 'Price'), ('review_score', 'Review Score'), ('stars', 'Stars')], max_length=20, null=True)),
                ('sort_direction', models.CharField(choices=[('ascending', 'Ascending'), ('descending', 'Descending')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fynder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Locale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('Ristorante', 'Ristorante'), ('Street food', 'Street food'), ('Cucino a casa', 'Cucino a casa'), ('Bar caffetteria', 'Bar caffetteria'), ('Disco', 'Disco'), ('Pub', 'Pub'), ('Coffe shop', 'Coffe shop')], max_length=50, null=True)),
                ('service_type', models.CharField(blank=True, choices=[('Pasticceria', 'Pasticceria'), ('Aperitivi', 'Aperitivi'), ('Chioschi', 'Chioschi'), ('Enoteche', 'Enoteche'), ('Colazione', 'Colazione'), ('Brunch', 'Brunch'), ('Cena', 'Cena'), ('Pranzo', 'Pranzo'), ('Eventi', 'Eventi')], max_length=50, null=True)),
                ('cuisine_type', models.CharField(blank=True, choices=[('Italiana', 'Italiana'), ('Cinese', 'Cinese'), ('Giapponese', 'Giapponese'), ('Indiana', 'Indiana'), ('Americana', 'Americana'), ('Araba', 'Araba'), ('Mediterranea', 'Mediterranea'), ('Messicana', 'Messicana'), ('Pesce', 'Pesce'), ('Fast food', 'Fast food'), ('Pizzeria', 'Pizzeria')], max_length=50, null=True)),
                ('activity_ref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locale', to='info.activity')),
            ],
        ),
        migrations.CreateModel(
            name='SavedAccommodation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(max_length=3)),
                ('deep_link_url', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('main_photo_url', models.URLField(blank=True, null=True)),
                ('photos', models.JSONField(blank=True, help_text='Array of photo URLs', null=True)),
                ('fynder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('search', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='info.bookingsearch')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(max_length=50)),
                ('fynder_basic_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='info.fynderbasictype')),
            ],
        ),
        migrations.CreateModel(
            name='FynderTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fynder_basic_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='info.fynderbasictype')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='info.tag')),
            ],
        ),
    ]
